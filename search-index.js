var searchIndex = {};
searchIndex["libffi"] = {"doc":"Rust bindings for libffi.","items":[[0,"raw","libffi","Raw definitions imported from the C library (via bindgen).",null,null],[0,"high","","High layer providing automatic marshalling of Rust closures as C function pointers.",null,null],[4,"FfiAbi","libffi::high","",null,null],[13,"FFI_FIRST_ABI","","",0,null],[13,"FFI_SYSV","","",0,null],[13,"FFI_UNIX64","","",0,null],[13,"FFI_THISCALL","","",0,null],[13,"FFI_FASTCALL","","",0,null],[13,"FFI_STDCALL","","",0,null],[13,"FFI_PASCAL","","",0,null],[13,"FFI_REGISTER","","",0,null],[13,"FFI_LAST_ABI","","",0,null],[17,"ffi_abi_FFI_DEFAULT_ABI","","",null,null],[0,"types","","Representations of C types for the high layer.",null,null],[3,"Type","libffi::high::types","Represents a C type statically associated with a Rust type.",null,null],[6,"c_c32","","Laid out the same as C11 `float complex` and C++11 `std::complex<float>`.",null,null],[6,"c_c64","","Laid out the same as C11 `double complex` and C++11 `std::complex<double>`.",null,null],[8,"CType","","Types that we can automatically marshall to/from C.",null,null],[10,"reify","","Creates or retrieves a `Type<T>` for any type `T: CType`.",1,{"inputs":[],"output":{"name":"type"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_middle","","Gets the underlying representation as used by the `middle` layer.",2,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"reify","","",3,{"inputs":[],"output":{"name":"type"}}],[11,"reify","","",4,{"inputs":[],"output":{"name":"type"}}],[0,"call","libffi::high","Simple dynamic calls.",null,null],[3,"Arg","libffi::high::call","Encapsulates an argument with its type information.",null,null],[5,"arg","","Constructs an `Arg` for passing to `call`.",null,{"inputs":[{"name":"t"}],"output":{"name":"arg"}}],[5,"call","","Performs a dynamic call to a C function.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"arg"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Wraps an argument reference for passing to `high::call::call`.",5,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[0,"arity0","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif0","libffi::high::arity0","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure0","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut0","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce0","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback0","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut0","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce0","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",6,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",6,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",6,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",7,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",7,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",7,{"inputs":[{"name":"cif0"},{"name":"callback0"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",7,{"inputs":[{"name":"cif0"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",8,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",8,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",8,{"inputs":[{"name":"cif0"},{"name":"callbackmut0"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",8,{"inputs":[{"name":"cif0"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",9,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",9,{"inputs":[{"name":"cif0"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",9,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",9,{"inputs":[{"name":"cif0"},{"name":"callbackonce0"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity1","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif1","libffi::high::arity1","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure1","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut1","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce1","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback1","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut1","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce1","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",10,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",10,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",10,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",11,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",11,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",11,{"inputs":[{"name":"cif1"},{"name":"callback1"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",11,{"inputs":[{"name":"cif1"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",12,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",12,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",12,{"inputs":[{"name":"cif1"},{"name":"callbackmut1"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",12,{"inputs":[{"name":"cif1"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",13,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",13,{"inputs":[{"name":"cif1"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",13,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",13,{"inputs":[{"name":"cif1"},{"name":"callbackonce1"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity2","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif2","libffi::high::arity2","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure2","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut2","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce2","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback2","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut2","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce2","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",14,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",14,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",14,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",15,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",15,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",15,{"inputs":[{"name":"cif2"},{"name":"callback2"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",15,{"inputs":[{"name":"cif2"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",16,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",16,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",16,{"inputs":[{"name":"cif2"},{"name":"callbackmut2"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",16,{"inputs":[{"name":"cif2"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",17,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",17,{"inputs":[{"name":"cif2"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",17,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",17,{"inputs":[{"name":"cif2"},{"name":"callbackonce2"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity3","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif3","libffi::high::arity3","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure3","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut3","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce3","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback3","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut3","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce3","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",18,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",18,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",18,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",19,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",19,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",19,{"inputs":[{"name":"cif3"},{"name":"callback3"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",19,{"inputs":[{"name":"cif3"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",20,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",20,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",20,{"inputs":[{"name":"cif3"},{"name":"callbackmut3"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",20,{"inputs":[{"name":"cif3"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",21,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",21,{"inputs":[{"name":"cif3"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",21,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",21,{"inputs":[{"name":"cif3"},{"name":"callbackonce3"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity4","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif4","libffi::high::arity4","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure4","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut4","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce4","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback4","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut4","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce4","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",22,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",22,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",22,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",23,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",23,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",23,{"inputs":[{"name":"cif4"},{"name":"callback4"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",23,{"inputs":[{"name":"cif4"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",24,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",24,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",24,{"inputs":[{"name":"cif4"},{"name":"callbackmut4"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",24,{"inputs":[{"name":"cif4"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",25,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",25,{"inputs":[{"name":"cif4"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",25,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",25,{"inputs":[{"name":"cif4"},{"name":"callbackonce4"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity5","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif5","libffi::high::arity5","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure5","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut5","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce5","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback5","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut5","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce5","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",26,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",26,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",26,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",27,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",27,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",27,{"inputs":[{"name":"cif5"},{"name":"callback5"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",27,{"inputs":[{"name":"cif5"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",28,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",28,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",28,{"inputs":[{"name":"cif5"},{"name":"callbackmut5"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",28,{"inputs":[{"name":"cif5"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",29,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",29,{"inputs":[{"name":"cif5"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",29,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",29,{"inputs":[{"name":"cif5"},{"name":"callbackonce5"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity6","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif6","libffi::high::arity6","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure6","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut6","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce6","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback6","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut6","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce6","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",30,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",30,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",30,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",31,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",31,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",31,{"inputs":[{"name":"cif6"},{"name":"callback6"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",31,{"inputs":[{"name":"cif6"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",32,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",32,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",32,{"inputs":[{"name":"cif6"},{"name":"callbackmut6"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",32,{"inputs":[{"name":"cif6"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",33,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",33,{"inputs":[{"name":"cif6"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",33,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",33,{"inputs":[{"name":"cif6"},{"name":"callbackonce6"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity7","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif7","libffi::high::arity7","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure7","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut7","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce7","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback7","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut7","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce7","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",34,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",34,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",34,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",35,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",35,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",35,{"inputs":[{"name":"cif7"},{"name":"callback7"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",35,{"inputs":[{"name":"cif7"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",36,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",36,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",36,{"inputs":[{"name":"cif7"},{"name":"callbackmut7"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",36,{"inputs":[{"name":"cif7"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",37,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",37,{"inputs":[{"name":"cif7"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",37,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",37,{"inputs":[{"name":"cif7"},{"name":"callbackonce7"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity8","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif8","libffi::high::arity8","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure8","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut8","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce8","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback8","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut8","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce8","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",38,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",38,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",38,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",39,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",39,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",39,{"inputs":[{"name":"cif8"},{"name":"callback8"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",39,{"inputs":[{"name":"cif8"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",40,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",40,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",40,{"inputs":[{"name":"cif8"},{"name":"callbackmut8"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",40,{"inputs":[{"name":"cif8"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",41,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",41,{"inputs":[{"name":"cif8"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",41,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",41,{"inputs":[{"name":"cif8"},{"name":"callbackonce8"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity9","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif9","libffi::high::arity9","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure9","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut9","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce9","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback9","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut9","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce9","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",42,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",42,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",42,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",43,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",43,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",43,{"inputs":[{"name":"cif9"},{"name":"callback9"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",43,{"inputs":[{"name":"cif9"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",44,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",44,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",44,{"inputs":[{"name":"cif9"},{"name":"callbackmut9"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",44,{"inputs":[{"name":"cif9"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",45,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",45,{"inputs":[{"name":"cif9"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",45,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",45,{"inputs":[{"name":"cif9"},{"name":"callbackonce9"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity10","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif10","libffi::high::arity10","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure10","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut10","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce10","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback10","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut10","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce10","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",46,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",46,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",46,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",47,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",47,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",47,{"inputs":[{"name":"cif10"},{"name":"callback10"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",47,{"inputs":[{"name":"cif10"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",48,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",48,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",48,{"inputs":[{"name":"cif10"},{"name":"callbackmut10"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",48,{"inputs":[{"name":"cif10"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",49,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",49,{"inputs":[{"name":"cif10"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",49,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",49,{"inputs":[{"name":"cif10"},{"name":"callbackonce10"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity11","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif11","libffi::high::arity11","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure11","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut11","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce11","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback11","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut11","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce11","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",50,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",50,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",50,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",51,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",51,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",51,{"inputs":[{"name":"cif11"},{"name":"callback11"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",51,{"inputs":[{"name":"cif11"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",52,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",52,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",52,{"inputs":[{"name":"cif11"},{"name":"callbackmut11"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",52,{"inputs":[{"name":"cif11"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",53,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",53,{"inputs":[{"name":"cif11"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",53,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",53,{"inputs":[{"name":"cif11"},{"name":"callbackonce11"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity12","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif12","libffi::high::arity12","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure12","","An immutable, typed closure with the given argument and result types.",null,null],[3,"ClosureMut12","","A mutable, typed closure with the given argument and result types.",null,null],[3,"ClosureOnce12","","A one-shot, typed closure with the given argument and result types.",null,null],[6,"Callback12","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut12","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce12","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument and result types.",54,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",54,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the argument types as `Type<T>`s.",54,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",55,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",55,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",55,{"inputs":[{"name":"cif12"},{"name":"callback12"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",55,{"inputs":[{"name":"cif12"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",56,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",56,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",56,{"inputs":[{"name":"cif12"},{"name":"callbackmut12"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",56,{"inputs":[{"name":"cif12"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a Rust closure.",57,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function and the Rust closure to call.",57,{"inputs":[{"name":"cif12"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the closure.",57,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF describing the calling convention for the resulting function, a callback for the function to call, and userdata to pass to the callback.",57,{"inputs":[{"name":"cif12"},{"name":"callbackonce12"},{"name":"u"}],"output":{"name":"self"}}],[0,"middle","libffi","Middle layer providing a somewhat safer (but still quite unsafe) API.",null,null],[4,"FfiAbi","libffi::middle","",null,null],[13,"FFI_FIRST_ABI","","",0,null],[13,"FFI_SYSV","","",0,null],[13,"FFI_UNIX64","","",0,null],[13,"FFI_THISCALL","","",0,null],[13,"FFI_FASTCALL","","",0,null],[13,"FFI_STDCALL","","",0,null],[13,"FFI_PASCAL","","",0,null],[13,"FFI_REGISTER","","",0,null],[13,"FFI_LAST_ABI","","",0,null],[17,"ffi_abi_FFI_DEFAULT_ABI","","",null,null],[3,"Type","","Represents a single C type.",null,null],[3,"Builder","","Provides a builder-style API for constructing CIFs and closures.",null,null],[3,"Arg","","Contains an untyped pointer to a function argument.",null,null],[3,"Cif","","Describes the calling convention and types for calling a function.",null,null],[3,"Closure","","Represents a closure callable from C.",null,null],[3,"ClosureOnce","","A closure that owns needs-drop data.",null,null],[5,"arg","","Coerces an argument reference into the `Arg` type.",null,{"inputs":[{"name":"t"}],"output":{"name":"arg"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"void","","Returns the representation of the C `void` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"u8","","Returns the unsigned 8-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"i8","","Returns the signed 8-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"u16","","Returns the unsigned 16-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"i16","","Returns the signed 16-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"u32","","Returns the unsigned 32-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"i32","","Returns the signed 32-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"u64","","Returns the unsigned 64-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"i64","","Returns the signed 64-bit numeric type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"usize","","Returns the C equivalent of Rust `usize` (`u64`).",58,{"inputs":[],"output":{"name":"self"}}],[11,"isize","","Returns the C equivalent of Rust `isize` (`i64`).",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_schar","","Returns the C `signed char` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_uchar","","Returns the C `unsigned char` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_short","","Returns the C `short` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_ushort","","Returns the C `unsigned short` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_int","","Returns the C `int` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_uint","","Returns the C `unsigned int` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_long","","Returns the C `long` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_ulong","","Returns the C `unsigned long` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_longlong","","Returns the C `longlong` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c_ulonglong","","Returns the C `unsigned longlong` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"f32","","Returns the C `float` (32-bit floating point) type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"f64","","Returns the C `double` (64-bit floating point) type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"pointer","","Returns the C `void*` type, for passing any kind of pointer.",58,{"inputs":[],"output":{"name":"self"}}],[11,"longdouble","","Returns the C `long double` (extended-precision floating point) type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c32","","Returns the C `_Complex float` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"c64","","Returns the C `_Complex double` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"complex_longdouble","","Returns the C `_Complex long double` type.",58,{"inputs":[],"output":{"name":"self"}}],[11,"structure","","Constructs a structure type whose fields have the given types.",58,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"as_raw_ptr","","Gets a raw pointer to the underlying `ffi_type`.",58,null],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a `Builder`.",59,{"inputs":[],"output":{"name":"self"}}],[11,"arg","","Adds a type to the argument type list.",59,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"self"}}],[11,"args","","Adds several types to the argument type list.",59,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"res","","Sets the result type.",59,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"self"}}],[11,"abi","","Sets the calling convention.",59,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":{"name":"self"}}],[11,"into_cif","","Builds a CIF.",59,{"inputs":[{"name":"self"}],"output":{"name":"cif"}}],[11,"into_closure","","Builds an immutable closure.",59,{"inputs":[{"name":"self"},{"name":"callback"},{"name":"u"}],"output":{"name":"closure"}}],[11,"into_closure_mut","","Builds a mutable closure.",59,{"inputs":[{"name":"self"},{"name":"callbackmut"},{"name":"u"}],"output":{"name":"closure"}}],[11,"into_closure_once","","Builds a one-shot closure.",59,{"inputs":[{"name":"self"},{"name":"callbackonce"},{"name":"u"}],"output":{"name":"closureonce"}}],[6,"CallbackOnce","","The type of callback invoked by a `ClosureOnce`.",null,null],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"arg"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Coerces an argument reference into the `Arg` type.",60,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","","Creates a new CIF for the given argument and result types.",61,{"inputs":[{"name":"i"},{"name":"type"}],"output":{"name":"self"}}],[11,"call","","Calls a function with the given arguments.",61,null],[11,"set_abi","","Sets the CIF to use the given calling convention.",61,{"inputs":[{"name":"self"},{"name":"ffiabi"}],"output":null}],[11,"as_raw_ptr","","Gets a raw pointer to the underlying `ffi_cif`.",61,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new closure with immutable userdata.",62,{"inputs":[{"name":"cif"},{"name":"callback"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_mut","","Creates a new closure with mutable userdata.",62,{"inputs":[{"name":"cif"},{"name":"callbackmut"},{"name":"u"}],"output":{"name":"self"}}],[11,"code_ptr","","Obtains the callable code pointer for a closure.",62,null],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new closure with owned userdata.",63,{"inputs":[{"name":"cif"},{"name":"callbackonce"},{"name":"u"}],"output":{"name":"self"}}],[11,"code_ptr","","Obtains the callable code pointer for a closure.",63,null],[0,"low","libffi","A low-level wrapping of libffi, this layer makes no attempts at safety, but tries to provide a somewhat more idiomatic interface.",null,null],[4,"ffi_abi","libffi::low","",null,null],[13,"FFI_FIRST_ABI","","",0,null],[13,"FFI_SYSV","","",0,null],[13,"FFI_UNIX64","","",0,null],[13,"FFI_THISCALL","","",0,null],[13,"FFI_FASTCALL","","",0,null],[13,"FFI_STDCALL","","",0,null],[13,"FFI_PASCAL","","",0,null],[13,"FFI_REGISTER","","",0,null],[13,"FFI_LAST_ABI","","",0,null],[17,"ffi_abi_FFI_DEFAULT_ABI","","",null,null],[3,"ffi_type","","",null,null],[12,"size","","",64,null],[12,"alignment","","",64,null],[12,"type_","","",64,null],[12,"elements","","",64,null],[4,"ffi_status","","",null,null],[13,"FFI_OK","","",65,null],[13,"FFI_BAD_TYPEDEF","","",65,null],[13,"FFI_BAD_ABI","","",65,null],[3,"ffi_cif","","",null,null],[12,"abi","","",66,null],[12,"nargs","","",66,null],[12,"arg_types","","",66,null],[12,"rtype","","",66,null],[12,"bytes","","",66,null],[12,"flags","","",66,null],[3,"ffi_closure","","",null,null],[12,"tramp","","",67,null],[12,"cif","","",67,null],[12,"fun","","",67,null],[12,"user_data","","",67,null],[3,"CodePtr","","Wraps a function pointer of unknown type.",null,null],[12,"0","","",68,null],[4,"Error","","The two kinds of errors reported by libffi.",null,null],[13,"Typedef","","Given a bad or unsupported type representation.",69,null],[13,"Abi","","Given a bad or unsupported ABI.",69,null],[5,"prep_cif","","Initalizes a CIF (Call Interface) with the given ABI and types.",null,null],[5,"prep_cif_var","","Initalizes a CIF (Call Interface) for a varargs function.",null,null],[5,"call","","Calls a C function as specified by a CIF.",null,null],[5,"closure_alloc","","Allocates a closure.",null,null],[5,"closure_free","","Frees a closure.",null,null],[5,"prep_closure","","Initializes a closure with a callback function and userdata.",null,null],[5,"prep_closure_mut","","Initializes a mutable closure with a callback function and (mutable) userdata.",null,null],[0,"types","","Re-exports the `ffi_type` objects used to describe the types of arguments and results.",null,null],[7,"void","libffi::low::types","",null,null],[7,"uint8","","",null,null],[7,"sint8","","",null,null],[7,"uint16","","",null,null],[7,"sint16","","",null,null],[7,"uint32","","",null,null],[7,"sint32","","",null,null],[7,"uint64","","",null,null],[7,"sint64","","",null,null],[7,"float","","",null,null],[7,"double","","",null,null],[7,"pointer","","",null,null],[7,"longdouble","","",null,null],[7,"complex_float","","",null,null],[7,"complex_double","","",null,null],[7,"complex_longdouble","","",null,null],[0,"type_tag","libffi::low","Type tags used in constructing and inspecting `ffi_type`s.",null,null],[17,"STRUCT","libffi::low::type_tag","Indicates a structure type.",null,null],[17,"COMPLEX","","Indicates a complex number type.",null,null],[6,"Result","libffi::low","The `Result` type specialized for libffi `Error`s.",null,null],[6,"Callback","","The type of function called by a closure.",null,null],[6,"CallbackMut","","The type of function called by a mutable closure.",null,null],[6,"RawCallback","","The callback type expected by `raw::ffi_prep_closure_loc`.",null,null],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",69,null],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",69,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"option"}}],[11,"cmp","","",69,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"ordering"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"codeptr"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",68,null],[11,"from_fun","","Initializes a code pointer from a function pointer.",68,null],[11,"from_ptr","","Initializes a code pointer from a void pointer.",68,null],[11,"as_fun","","Gets the code pointer typed as a C function pointer.",68,null],[11,"as_safe_fun","","Gets the code pointer typed as a “safe” C function pointer.",68,null],[11,"as_ptr","","Gets the code pointer typed as a `const void*`.",68,null],[11,"as_mut_ptr","","Gets the code pointer typed as a `void*`.",68,null],[14,"ffi_call","libffi","Performs a dynamic call to a C function.",null,null],[11,"eq","libffi::low","",0,{"inputs":[{"name":"self"},{"name":"ffi_abi"}],"output":{"name":"bool"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"ffi_status"}],"output":{"name":"bool"}}],[11,"default","","",64,{"inputs":[],"output":{"name":"_ffi_type"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"ffi_cif"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"ffi_closure"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"hash","","",65,null],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"_ffi_type"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"ffi_cif"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"ffi_closure"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ffi_abi"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"ffi_status"}}]],"paths":[[4,"ffi_abi"],[8,"CType"],[3,"Type"],[6,"c_c32"],[6,"c_c64"],[3,"Arg"],[3,"Cif0"],[3,"Closure0"],[3,"ClosureMut0"],[3,"ClosureOnce0"],[3,"Cif1"],[3,"Closure1"],[3,"ClosureMut1"],[3,"ClosureOnce1"],[3,"Cif2"],[3,"Closure2"],[3,"ClosureMut2"],[3,"ClosureOnce2"],[3,"Cif3"],[3,"Closure3"],[3,"ClosureMut3"],[3,"ClosureOnce3"],[3,"Cif4"],[3,"Closure4"],[3,"ClosureMut4"],[3,"ClosureOnce4"],[3,"Cif5"],[3,"Closure5"],[3,"ClosureMut5"],[3,"ClosureOnce5"],[3,"Cif6"],[3,"Closure6"],[3,"ClosureMut6"],[3,"ClosureOnce6"],[3,"Cif7"],[3,"Closure7"],[3,"ClosureMut7"],[3,"ClosureOnce7"],[3,"Cif8"],[3,"Closure8"],[3,"ClosureMut8"],[3,"ClosureOnce8"],[3,"Cif9"],[3,"Closure9"],[3,"ClosureMut9"],[3,"ClosureOnce9"],[3,"Cif10"],[3,"Closure10"],[3,"ClosureMut10"],[3,"ClosureOnce10"],[3,"Cif11"],[3,"Closure11"],[3,"ClosureMut11"],[3,"ClosureOnce11"],[3,"Cif12"],[3,"Closure12"],[3,"ClosureMut12"],[3,"ClosureOnce12"],[3,"Type"],[3,"Builder"],[3,"Arg"],[3,"Cif"],[3,"Closure"],[3,"ClosureOnce"],[3,"ffi_type"],[4,"ffi_status"],[3,"ffi_cif"],[3,"ffi_closure"],[3,"CodePtr"],[4,"Error"]]};
searchIndex["libffi_sys"] = {"doc":"Low-level Rust bindings for libffi","items":[[3,"__BindgenUnionField","libffi_sys","",null,null],[3,"_ffi_type","","",null,null],[12,"size","","",0,null],[12,"alignment","","",0,null],[12,"type_","","",0,null],[12,"elements","","",0,null],[3,"ffi_cif","","",null,null],[12,"abi","","",1,null],[12,"nargs","","",1,null],[12,"arg_types","","",1,null],[12,"rtype","","",1,null],[12,"bytes","","",1,null],[12,"flags","","",1,null],[3,"ffi_raw","","",null,null],[12,"sint","","",2,null],[12,"uint","","",2,null],[12,"flt","","",2,null],[12,"data","","",2,null],[12,"ptr","","",2,null],[12,"bindgen_union_field","","",2,null],[3,"ffi_closure","","",null,null],[12,"tramp","","",3,null],[12,"cif","","",3,null],[12,"fun","","",3,null],[12,"user_data","","",3,null],[3,"ffi_raw_closure","","",null,null],[12,"tramp","","",4,null],[12,"cif","","",4,null],[12,"translate_args","","",4,null],[12,"this_closure","","",4,null],[12,"fun","","",4,null],[12,"user_data","","",4,null],[3,"ffi_java_raw_closure","","",null,null],[12,"tramp","","",5,null],[12,"cif","","",5,null],[12,"translate_args","","",5,null],[12,"this_closure","","",5,null],[12,"fun","","",5,null],[12,"user_data","","",5,null],[4,"ffi_abi","","",null,null],[13,"FFI_FIRST_ABI","","",6,null],[13,"FFI_SYSV","","",6,null],[13,"FFI_UNIX64","","",6,null],[13,"FFI_THISCALL","","",6,null],[13,"FFI_FASTCALL","","",6,null],[13,"FFI_STDCALL","","",6,null],[13,"FFI_PASCAL","","",6,null],[13,"FFI_REGISTER","","",6,null],[13,"FFI_LAST_ABI","","",6,null],[4,"ffi_status","","",null,null],[13,"FFI_OK","","",7,null],[13,"FFI_BAD_TYPEDEF","","",7,null],[13,"FFI_BAD_ABI","","",7,null],[4,"ffi_type_enum","","",null,null],[13,"STRUCT","","",8,null],[13,"COMPLEX","","",8,null],[7,"ffi_type_void","","",null,null],[7,"ffi_type_uint8","","",null,null],[7,"ffi_type_sint8","","",null,null],[7,"ffi_type_uint16","","",null,null],[7,"ffi_type_sint16","","",null,null],[7,"ffi_type_uint32","","",null,null],[7,"ffi_type_sint32","","",null,null],[7,"ffi_type_uint64","","",null,null],[7,"ffi_type_sint64","","",null,null],[7,"ffi_type_float","","",null,null],[7,"ffi_type_double","","",null,null],[7,"ffi_type_pointer","","",null,null],[7,"ffi_type_longdouble","","",null,null],[7,"ffi_type_complex_float","","",null,null],[7,"ffi_type_complex_double","","",null,null],[7,"ffi_type_complex_longdouble","","",null,null],[5,"ffi_prep_cif_core","","",null,null],[5,"ffi_raw_call","","",null,null],[5,"ffi_ptrarray_to_raw","","",null,null],[5,"ffi_raw_to_ptrarray","","",null,null],[5,"ffi_raw_size","","",null,null],[5,"ffi_java_raw_call","","",null,null],[5,"ffi_java_ptrarray_to_raw","","",null,null],[5,"ffi_java_raw_to_ptrarray","","",null,null],[5,"ffi_java_raw_size","","",null,null],[5,"ffi_closure_alloc","","",null,null],[5,"ffi_closure_free","","",null,null],[5,"ffi_prep_closure","","",null,null],[5,"ffi_prep_closure_loc","","",null,null],[5,"ffi_prep_raw_closure","","",null,null],[5,"ffi_prep_raw_closure_loc","","",null,null],[5,"ffi_prep_java_raw_closure","","",null,null],[5,"ffi_prep_java_raw_closure_loc","","",null,null],[5,"ffi_prep_cif","","",null,null],[5,"ffi_prep_cif_var","","",null,null],[5,"ffi_call","","",null,null],[11,"new","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"as_ref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"as_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"ffi_abi"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"ffi_abi"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"ffi_status"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"ffi_status"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"ffi_raw"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ffi_type_enum"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"ffi_type_enum"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[6,"ffi_arg","","",null,null],[6,"ffi_sarg","","",null,null],[6,"wchar_t","","",null,null],[6,"ffi_type","","",null,null],[6,"FFI_TYPE","","",null,null],[6,"ffi_java_raw","","",null,null],[17,"FFI_CLOSURES","","",null,null],[17,"FFI_TRAMPOLINE_SIZE","","",null,null],[17,"FFI_NATIVE_RAW_API","","",null,null],[17,"__DARWIN_ONLY_64_BIT_INO_T","","",null,null],[17,"__DARWIN_ONLY_VERS_1050","","",null,null],[17,"__DARWIN_ONLY_UNIX_CONFORMANCE","","",null,null],[17,"__DARWIN_UNIX03","","",null,null],[17,"__DARWIN_64_BIT_INO_T","","",null,null],[17,"__DARWIN_VERS_1050","","",null,null],[17,"__DARWIN_NON_CANCELABLE","","",null,null],[17,"__DARWIN_SUF_64_BIT_INO_T","","",null,null],[17,"__DARWIN_SUF_1050","","",null,null],[17,"__DARWIN_SUF_EXTSN","","",null,null],[17,"__DARWIN_C_ANSI","","",null,null],[17,"__DARWIN_C_FULL","","",null,null],[17,"__DARWIN_C_LEVEL","","",null,null],[17,"__STDC_WANT_LIB_EXT1__","","",null,null],[17,"_DARWIN_FEATURE_64_BIT_INODE","","",null,null],[17,"_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE","","",null,null],[17,"_DARWIN_FEATURE_UNIX_CONFORMANCE","","",null,null],[17,"__DARWIN_CLK_TCK","","",null,null],[17,"CHAR_BIT","","",null,null],[17,"MB_LEN_MAX","","",null,null],[17,"CLK_TCK","","",null,null],[17,"SCHAR_MAX","","",null,null],[17,"SCHAR_MIN","","",null,null],[17,"UCHAR_MAX","","",null,null],[17,"CHAR_MAX","","",null,null],[17,"CHAR_MIN","","",null,null],[17,"USHRT_MAX","","",null,null],[17,"SHRT_MAX","","",null,null],[17,"SHRT_MIN","","",null,null],[17,"UINT_MAX","","",null,null],[17,"INT_MAX","","",null,null],[17,"INT_MIN","","",null,null],[17,"ULONG_MAX","","",null,null],[17,"LONG_MAX","","",null,null],[17,"LONG_MIN","","",null,null],[17,"ULLONG_MAX","","",null,null],[17,"LLONG_MAX","","",null,null],[17,"LLONG_MIN","","",null,null],[17,"LONG_BIT","","",null,null],[17,"SSIZE_MAX","","",null,null],[17,"WORD_BIT","","",null,null],[17,"SIZE_T_MAX","","",null,null],[17,"UQUAD_MAX","","",null,null],[17,"QUAD_MAX","","",null,null],[17,"QUAD_MIN","","",null,null],[17,"ARG_MAX","","",null,null],[17,"CHILD_MAX","","",null,null],[17,"GID_MAX","","",null,null],[17,"LINK_MAX","","",null,null],[17,"MAX_CANON","","",null,null],[17,"MAX_INPUT","","",null,null],[17,"NAME_MAX","","",null,null],[17,"NGROUPS_MAX","","",null,null],[17,"UID_MAX","","",null,null],[17,"OPEN_MAX","","",null,null],[17,"PATH_MAX","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"BC_BASE_MAX","","",null,null],[17,"BC_DIM_MAX","","",null,null],[17,"BC_SCALE_MAX","","",null,null],[17,"BC_STRING_MAX","","",null,null],[17,"CHARCLASS_NAME_MAX","","",null,null],[17,"COLL_WEIGHTS_MAX","","",null,null],[17,"EQUIV_CLASS_MAX","","",null,null],[17,"EXPR_NEST_MAX","","",null,null],[17,"LINE_MAX","","",null,null],[17,"RE_DUP_MAX","","",null,null],[17,"NZERO","","",null,null],[17,"_POSIX_ARG_MAX","","",null,null],[17,"_POSIX_CHILD_MAX","","",null,null],[17,"_POSIX_LINK_MAX","","",null,null],[17,"_POSIX_MAX_CANON","","",null,null],[17,"_POSIX_MAX_INPUT","","",null,null],[17,"_POSIX_NAME_MAX","","",null,null],[17,"_POSIX_NGROUPS_MAX","","",null,null],[17,"_POSIX_OPEN_MAX","","",null,null],[17,"_POSIX_PATH_MAX","","",null,null],[17,"_POSIX_PIPE_BUF","","",null,null],[17,"_POSIX_SSIZE_MAX","","",null,null],[17,"_POSIX_STREAM_MAX","","",null,null],[17,"_POSIX_TZNAME_MAX","","",null,null],[17,"_POSIX2_BC_BASE_MAX","","",null,null],[17,"_POSIX2_BC_DIM_MAX","","",null,null],[17,"_POSIX2_BC_SCALE_MAX","","",null,null],[17,"_POSIX2_BC_STRING_MAX","","",null,null],[17,"_POSIX2_EQUIV_CLASS_MAX","","",null,null],[17,"_POSIX2_EXPR_NEST_MAX","","",null,null],[17,"_POSIX2_LINE_MAX","","",null,null],[17,"_POSIX2_RE_DUP_MAX","","",null,null],[17,"_POSIX_AIO_LISTIO_MAX","","",null,null],[17,"_POSIX_AIO_MAX","","",null,null],[17,"_POSIX_DELAYTIMER_MAX","","",null,null],[17,"_POSIX_MQ_OPEN_MAX","","",null,null],[17,"_POSIX_MQ_PRIO_MAX","","",null,null],[17,"_POSIX_RTSIG_MAX","","",null,null],[17,"_POSIX_SEM_NSEMS_MAX","","",null,null],[17,"_POSIX_SEM_VALUE_MAX","","",null,null],[17,"_POSIX_SIGQUEUE_MAX","","",null,null],[17,"_POSIX_TIMER_MAX","","",null,null],[17,"_POSIX_CLOCKRES_MIN","","",null,null],[17,"_POSIX_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_POSIX_THREAD_KEYS_MAX","","",null,null],[17,"_POSIX_THREAD_THREADS_MAX","","",null,null],[17,"PTHREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"PTHREAD_KEYS_MAX","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"_POSIX_HOST_NAME_MAX","","",null,null],[17,"_POSIX_LOGIN_NAME_MAX","","",null,null],[17,"_POSIX_SS_REPL_MAX","","",null,null],[17,"_POSIX_SYMLINK_MAX","","",null,null],[17,"_POSIX_SYMLOOP_MAX","","",null,null],[17,"_POSIX_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_POSIX_TRACE_NAME_MAX","","",null,null],[17,"_POSIX_TRACE_SYS_MAX","","",null,null],[17,"_POSIX_TRACE_USER_EVENT_MAX","","",null,null],[17,"_POSIX_TTY_NAME_MAX","","",null,null],[17,"_POSIX2_CHARCLASS_NAME_MAX","","",null,null],[17,"_POSIX2_COLL_WEIGHTS_MAX","","",null,null],[17,"_POSIX_RE_DUP_MAX","","",null,null],[17,"OFF_MIN","","",null,null],[17,"OFF_MAX","","",null,null],[17,"PASS_MAX","","",null,null],[17,"NL_ARGMAX","","",null,null],[17,"NL_LANGMAX","","",null,null],[17,"NL_MSGMAX","","",null,null],[17,"NL_NMAX","","",null,null],[17,"NL_SETMAX","","",null,null],[17,"NL_TEXTMAX","","",null,null],[17,"_XOPEN_IOV_MAX","","",null,null],[17,"IOV_MAX","","",null,null],[17,"_XOPEN_NAME_MAX","","",null,null],[17,"_XOPEN_PATH_MAX","","",null,null],[17,"FFI_64_BIT_MAX","","",null,null],[17,"FFI_SIZEOF_ARG","","",null,null],[17,"FFI_SIZEOF_JAVA_RAW","","",null,null],[17,"FFI_TYPE_VOID","","",null,null],[17,"FFI_TYPE_INT","","",null,null],[17,"FFI_TYPE_FLOAT","","",null,null],[17,"FFI_TYPE_DOUBLE","","",null,null],[17,"FFI_TYPE_LONGDOUBLE","","",null,null],[17,"FFI_TYPE_UINT8","","",null,null],[17,"FFI_TYPE_SINT8","","",null,null],[17,"FFI_TYPE_UINT16","","",null,null],[17,"FFI_TYPE_SINT16","","",null,null],[17,"FFI_TYPE_UINT32","","",null,null],[17,"FFI_TYPE_SINT32","","",null,null],[17,"FFI_TYPE_UINT64","","",null,null],[17,"FFI_TYPE_SINT64","","",null,null],[17,"FFI_TYPE_STRUCT","","",null,null],[17,"FFI_TYPE_POINTER","","",null,null],[17,"FFI_TYPE_COMPLEX","","",null,null],[17,"FFI_TYPE_LAST","","",null,null],[17,"ffi_abi_FFI_DEFAULT_ABI","","",null,null]],"paths":[[3,"_ffi_type"],[3,"ffi_cif"],[3,"ffi_raw"],[3,"ffi_closure"],[3,"ffi_raw_closure"],[3,"ffi_java_raw_closure"],[4,"ffi_abi"],[4,"ffi_status"],[4,"ffi_type_enum"],[3,"__BindgenUnionField"]]};
initSearch(searchIndex);
