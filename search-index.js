var searchIndex = {};
searchIndex["libffi"] = {"doc":"Rust bindings for [libffi](https://sourceware.org/libffi/).","items":[[0,"raw","libffi","Unwrapped definitions imported from the C library (via bindgen).",null,null],[3,"_ffi_type","libffi::raw","",null,null],[12,"size","","",0,null],[12,"alignment","","",0,null],[12,"type_","","",0,null],[12,"elements","","",0,null],[3,"ffi_cif","","",null,null],[12,"abi","","",1,null],[12,"nargs","","",1,null],[12,"arg_types","","",1,null],[12,"rtype","","",1,null],[12,"bytes","","",1,null],[12,"flags","","",1,null],[3,"ffi_raw","","",null,null],[12,"_bindgen_data_","","",2,null],[3,"ffi_closure","","",null,null],[12,"tramp","","",3,null],[12,"cif","","",3,null],[12,"fun","","",3,null],[12,"user_data","","",3,null],[3,"ffi_raw_closure","","",null,null],[12,"tramp","","",4,null],[12,"cif","","",4,null],[12,"translate_args","","",4,null],[12,"this_closure","","",4,null],[12,"fun","","",4,null],[12,"user_data","","",4,null],[3,"ffi_java_raw_closure","","",null,null],[12,"tramp","","",5,null],[12,"cif","","",5,null],[12,"translate_args","","",5,null],[12,"this_closure","","",5,null],[12,"fun","","",5,null],[12,"user_data","","",5,null],[4,"ffi_abi","","",null,null],[13,"FFI_FIRST_ABI","","",6,null],[13,"FFI_SYSV","","",6,null],[13,"FFI_UNIX64","","",6,null],[13,"FFI_THISCALL","","",6,null],[13,"FFI_FASTCALL","","",6,null],[13,"FFI_STDCALL","","",6,null],[13,"FFI_PASCAL","","",6,null],[13,"FFI_REGISTER","","",6,null],[13,"FFI_LAST_ABI","","",6,null],[4,"ffi_status","","",null,null],[13,"FFI_OK","","",7,null],[13,"FFI_BAD_TYPEDEF","","",7,null],[13,"FFI_BAD_ABI","","",7,null],[4,"ffi_type_enum","","",null,null],[13,"STRUCT","","",8,null],[13,"COMPLEX","","",8,null],[7,"ffi_type_void","","",null,null],[7,"ffi_type_uint8","","",null,null],[7,"ffi_type_sint8","","",null,null],[7,"ffi_type_uint16","","",null,null],[7,"ffi_type_sint16","","",null,null],[7,"ffi_type_uint32","","",null,null],[7,"ffi_type_sint32","","",null,null],[7,"ffi_type_uint64","","",null,null],[7,"ffi_type_sint64","","",null,null],[7,"ffi_type_float","","",null,null],[7,"ffi_type_double","","",null,null],[7,"ffi_type_pointer","","",null,null],[7,"ffi_type_longdouble","","",null,null],[7,"ffi_type_complex_float","","",null,null],[7,"ffi_type_complex_double","","",null,null],[7,"ffi_type_complex_longdouble","","",null,null],[5,"ffi_prep_cif_core","","",null,null],[5,"ffi_raw_call","","",null,null],[5,"ffi_ptrarray_to_raw","","",null,null],[5,"ffi_raw_to_ptrarray","","",null,null],[5,"ffi_raw_size","","",null,null],[5,"ffi_java_raw_call","","",null,null],[5,"ffi_java_ptrarray_to_raw","","",null,null],[5,"ffi_java_raw_to_ptrarray","","",null,null],[5,"ffi_java_raw_size","","",null,null],[5,"ffi_closure_alloc","","",null,null],[5,"ffi_closure_free","","",null,null],[5,"ffi_prep_closure","","",null,null],[5,"ffi_prep_closure_loc","","",null,null],[5,"ffi_prep_raw_closure","","",null,null],[5,"ffi_prep_raw_closure_loc","","",null,null],[5,"ffi_prep_java_raw_closure","","",null,null],[5,"ffi_prep_java_raw_closure_loc","","",null,null],[5,"ffi_prep_cif","","",null,null],[5,"ffi_prep_cif_var","","",null,null],[5,"ffi_call","","",null,null],[6,"ffi_arg","","",null,null],[6,"ffi_sarg","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"size_t","","",null,null],[6,"wchar_t","","",null,null],[6,"max_align_t","","",null,null],[6,"ffi_type","","",null,null],[6,"FFI_TYPE","","",null,null],[6,"ffi_java_raw","","",null,null],[17,"FFI_DEFAULT_ABI","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"ffi_abi"}],"output":{"name":"ffi_abi"}}],[11,"fmt","","",6,{"inputs":[{"name":"ffi_abi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"_ffi_type"}],"output":{"name":"_ffi_type"}}],[11,"fmt","","",0,{"inputs":[{"name":"_ffi_type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",7,{"inputs":[{"name":"ffi_status"}],"output":{"name":"ffi_status"}}],[11,"fmt","","",7,{"inputs":[{"name":"ffi_status"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"ffi_cif"}],"output":{"name":"ffi_cif"}}],[11,"fmt","","",1,{"inputs":[{"name":"ffi_cif"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"ffi_raw"}],"output":{"name":"ffi_raw"}}],[11,"fmt","","",2,{"inputs":[{"name":"ffi_raw"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sint","","",2,null],[11,"uint_","","",2,null],[11,"flt","","",2,null],[11,"data","","",2,null],[11,"ptr","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"ffi_closure"}],"output":{"name":"ffi_closure"}}],[11,"fmt","","",3,{"inputs":[{"name":"ffi_closure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"ffi_raw_closure"}],"output":{"name":"ffi_raw_closure"}}],[11,"fmt","","",4,{"inputs":[{"name":"ffi_raw_closure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",5,{"inputs":[{"name":"ffi_java_raw_closure"}],"output":{"name":"ffi_java_raw_closure"}}],[11,"fmt","","",5,{"inputs":[{"name":"ffi_java_raw_closure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",8,{"inputs":[{"name":"ffi_type_enum"}],"output":{"name":"ffi_type_enum"}}],[11,"fmt","","",8,{"inputs":[{"name":"ffi_type_enum"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"high","libffi","High layer providing automatic marshalling of Rust closures\nas C function pointers.",null,null],[0,"types","libffi::high","Representations of C types for the high layer.",null,null],[3,"Type","libffi::high::types","Represents a C type statically associated with a Rust type.",null,null],[6,"c_c32","","Laid out the same as C11 `float complex` and C++11\n`std::complex&lt;float&gt;`.",null,null],[6,"c_c64","","Laid out the same as C11 `double complex` and C++11\n`std::complex&lt;double&gt;`.",null,null],[8,"CType","","Types that we can automatically marshall to/from C.",null,null],[10,"reify","","Creates or retrieves a `Type&lt;T&gt;` for any type `T: CType`.",9,{"inputs":[],"output":{"name":"type"}}],[11,"fmt","","",10,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"into_middle","","Gets the underlying representation as used by the\n[`middle`](../../middle/index.html) layer.",10,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"reify","","",11,{"inputs":[],"output":{"name":"type"}}],[11,"reify","","",12,{"inputs":[],"output":{"name":"type"}}],[0,"call","libffi::high","Simple dynamic calls.",null,null],[3,"Arg","libffi::high::call","Encapsulates an argument with its type information.",null,null],[5,"arg","","Constructs an [`Arg`](struct.Arg.html) for passing to\n[`call`](fn.call.html).",null,{"inputs":[{"name":"t"}],"output":{"name":"arg"}}],[5,"call","","Performs a dynamic call to a C function.",null,null],[11,"fmt","","",13,{"inputs":[{"name":"arg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"arg"}],"output":{"name":"arg"}}],[11,"new","","Wraps an argument reference for passing to `high::call::call`.",13,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[0,"arity0","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif0","libffi::high::arity0","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure0","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut0","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce0","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback0","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut0","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce0","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",14,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",14,{"inputs":[{"name":"cif0"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",14,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",15,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",15,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",15,{"inputs":[{"name":"cif0"},{"name":"callback0"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",15,{"inputs":[{"name":"cif0"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",16,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",16,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",16,{"inputs":[{"name":"cif0"},{"name":"callbackmut0"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",16,{"inputs":[{"name":"cif0"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",17,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",17,{"inputs":[{"name":"cif0"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",17,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",17,{"inputs":[{"name":"cif0"},{"name":"callbackonce0"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity1","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif1","libffi::high::arity1","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure1","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut1","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce1","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback1","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut1","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce1","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",18,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",18,{"inputs":[{"name":"cif1"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",18,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",19,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",19,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",19,{"inputs":[{"name":"cif1"},{"name":"callback1"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",19,{"inputs":[{"name":"cif1"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",20,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",20,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",20,{"inputs":[{"name":"cif1"},{"name":"callbackmut1"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",20,{"inputs":[{"name":"cif1"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",21,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",21,{"inputs":[{"name":"cif1"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",21,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",21,{"inputs":[{"name":"cif1"},{"name":"callbackonce1"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity2","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif2","libffi::high::arity2","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure2","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut2","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce2","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback2","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut2","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce2","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",22,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",22,{"inputs":[{"name":"cif2"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",22,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",23,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",23,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",23,{"inputs":[{"name":"cif2"},{"name":"callback2"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",23,{"inputs":[{"name":"cif2"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",24,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",24,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",24,{"inputs":[{"name":"cif2"},{"name":"callbackmut2"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",24,{"inputs":[{"name":"cif2"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",25,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",25,{"inputs":[{"name":"cif2"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",25,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",25,{"inputs":[{"name":"cif2"},{"name":"callbackonce2"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity3","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif3","libffi::high::arity3","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure3","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut3","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce3","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback3","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut3","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce3","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",26,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",26,{"inputs":[{"name":"cif3"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",26,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",27,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",27,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",27,{"inputs":[{"name":"cif3"},{"name":"callback3"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",27,{"inputs":[{"name":"cif3"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",28,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",28,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",28,{"inputs":[{"name":"cif3"},{"name":"callbackmut3"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",28,{"inputs":[{"name":"cif3"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",29,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",29,{"inputs":[{"name":"cif3"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",29,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",29,{"inputs":[{"name":"cif3"},{"name":"callbackonce3"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity4","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif4","libffi::high::arity4","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure4","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut4","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce4","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback4","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut4","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce4","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",30,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",30,{"inputs":[{"name":"cif4"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",30,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",31,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",31,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",31,{"inputs":[{"name":"cif4"},{"name":"callback4"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",31,{"inputs":[{"name":"cif4"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",32,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",32,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",32,{"inputs":[{"name":"cif4"},{"name":"callbackmut4"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",32,{"inputs":[{"name":"cif4"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",33,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",33,{"inputs":[{"name":"cif4"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",33,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",33,{"inputs":[{"name":"cif4"},{"name":"callbackonce4"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity5","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif5","libffi::high::arity5","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure5","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut5","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce5","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback5","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut5","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce5","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",34,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",34,{"inputs":[{"name":"cif5"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",34,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",35,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",35,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",35,{"inputs":[{"name":"cif5"},{"name":"callback5"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",35,{"inputs":[{"name":"cif5"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",36,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",36,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",36,{"inputs":[{"name":"cif5"},{"name":"callbackmut5"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",36,{"inputs":[{"name":"cif5"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",37,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",37,{"inputs":[{"name":"cif5"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",37,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",37,{"inputs":[{"name":"cif5"},{"name":"callbackonce5"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity6","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif6","libffi::high::arity6","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure6","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut6","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce6","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback6","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut6","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce6","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",38,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",38,{"inputs":[{"name":"cif6"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",38,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",39,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",39,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",39,{"inputs":[{"name":"cif6"},{"name":"callback6"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",39,{"inputs":[{"name":"cif6"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",40,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",40,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",40,{"inputs":[{"name":"cif6"},{"name":"callbackmut6"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",40,{"inputs":[{"name":"cif6"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",41,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",41,{"inputs":[{"name":"cif6"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",41,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",41,{"inputs":[{"name":"cif6"},{"name":"callbackonce6"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity7","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif7","libffi::high::arity7","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure7","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut7","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce7","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback7","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut7","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce7","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",42,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",42,{"inputs":[{"name":"cif7"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",42,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",43,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",43,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",43,{"inputs":[{"name":"cif7"},{"name":"callback7"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",43,{"inputs":[{"name":"cif7"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",44,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",44,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",44,{"inputs":[{"name":"cif7"},{"name":"callbackmut7"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",44,{"inputs":[{"name":"cif7"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",45,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",45,{"inputs":[{"name":"cif7"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",45,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",45,{"inputs":[{"name":"cif7"},{"name":"callbackonce7"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity8","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif8","libffi::high::arity8","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure8","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut8","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce8","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback8","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut8","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce8","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",46,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",46,{"inputs":[{"name":"cif8"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",46,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",47,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",47,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",47,{"inputs":[{"name":"cif8"},{"name":"callback8"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",47,{"inputs":[{"name":"cif8"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",48,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",48,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",48,{"inputs":[{"name":"cif8"},{"name":"callbackmut8"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",48,{"inputs":[{"name":"cif8"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",49,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",49,{"inputs":[{"name":"cif8"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",49,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",49,{"inputs":[{"name":"cif8"},{"name":"callbackonce8"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity9","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif9","libffi::high::arity9","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure9","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut9","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce9","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback9","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut9","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce9","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",50,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",50,{"inputs":[{"name":"cif9"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",50,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",51,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",51,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",51,{"inputs":[{"name":"cif9"},{"name":"callback9"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",51,{"inputs":[{"name":"cif9"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",52,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",52,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",52,{"inputs":[{"name":"cif9"},{"name":"callbackmut9"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",52,{"inputs":[{"name":"cif9"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",53,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",53,{"inputs":[{"name":"cif9"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",53,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",53,{"inputs":[{"name":"cif9"},{"name":"callbackonce9"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity10","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif10","libffi::high::arity10","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure10","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut10","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce10","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback10","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut10","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce10","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",54,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",54,{"inputs":[{"name":"cif10"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",54,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",55,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",55,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",55,{"inputs":[{"name":"cif10"},{"name":"callback10"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",55,{"inputs":[{"name":"cif10"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",56,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",56,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",56,{"inputs":[{"name":"cif10"},{"name":"callbackmut10"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",56,{"inputs":[{"name":"cif10"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",57,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",57,{"inputs":[{"name":"cif10"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",57,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",57,{"inputs":[{"name":"cif10"},{"name":"callbackonce10"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity11","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif11","libffi::high::arity11","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure11","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut11","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce11","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback11","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut11","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce11","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",58,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",58,{"inputs":[{"name":"cif11"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",58,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",59,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",59,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",59,{"inputs":[{"name":"cif11"},{"name":"callback11"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",59,{"inputs":[{"name":"cif11"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",60,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",60,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",60,{"inputs":[{"name":"cif11"},{"name":"callbackmut11"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",60,{"inputs":[{"name":"cif11"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",61,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",61,{"inputs":[{"name":"cif11"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",61,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",61,{"inputs":[{"name":"cif11"},{"name":"callbackonce11"},{"name":"u"}],"output":{"name":"self"}}],[0,"arity12","libffi::high","CIF and closure types organized by function arity.",null,null],[3,"Cif12","libffi::high::arity12","A typed CIF, which statically tracks argument and result types.",null,null],[3,"Closure12","","An immutable, typed closure with the given argument and result\ntypes.",null,null],[3,"ClosureMut12","","A mutable, typed closure with the given argument and\nresult types.",null,null],[3,"ClosureOnce12","","A one-shot, typed closure with the given argument and\nresult types.",null,null],[6,"Callback12","","The type of function called from an immutable, typed closure.",null,null],[6,"CallbackMut12","","The type of function called from a mutable, typed closure.",null,null],[6,"CallbackOnce12","","The type of function called from a one-shot, typed closure.",null,null],[11,"new","","Creates a new statically-typed CIF with the given argument\nand result types.",62,{"inputs":[{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"set_abi","","Sets the CIF to use the given calling convention.",62,{"inputs":[{"name":"cif12"},{"name":"ffiabi"}],"output":null}],[11,"reify","","Creates a new statically-typed CIF by reifying the\nargument types as `Type&lt;T&gt;`s.",62,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",63,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",63,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",63,{"inputs":[{"name":"cif12"},{"name":"callback12"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",63,{"inputs":[{"name":"cif12"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",64,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",64,null],[11,"from_parts","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",64,{"inputs":[{"name":"cif12"},{"name":"callbackmut12"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a typed closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",64,{"inputs":[{"name":"cif12"},{"name":"callback"}],"output":{"name":"self"}}],[11,"new","","Constructs a typed closure callable from C from a\nRust closure.",65,{"inputs":[{"name":"callback"}],"output":{"name":"self"}}],[11,"new_with_cif","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction and the Rust closure to call.",65,{"inputs":[{"name":"cif12"},{"name":"callback"}],"output":{"name":"self"}}],[11,"code_ptr","","Gets the C code pointer that is used to invoke the\nclosure.",65,null],[11,"from_parts","","Constructs a one-shot closure callable from C from a CIF\ndescribing the calling convention for the resulting\nfunction, a callback for the function to call, and\nuserdata to pass to the callback.",65,{"inputs":[{"name":"cif12"},{"name":"callbackonce12"},{"name":"u"}],"output":{"name":"self"}}],[0,"middle","libffi","Middle layer providing a somewhat safer (but still quite unsafe)\nAPI.",null,null],[3,"Type","libffi::middle","Represents a single C type.",null,null],[3,"Builder","","Provides a builder-style API for constructing CIFs and closures.",null,null],[3,"Arg","","Contains an untyped pointer to a function argument.",null,null],[3,"Cif","","Describes the calling convention and types for calling a function.",null,null],[3,"Closure","","Represents a closure callable from C.",null,null],[3,"ClosureOnce","","A closure that owns needs-drop data.",null,null],[5,"arg","","Coerces an argument reference into the [`Arg`](struct.Arg.html)\ntype.",null,{"inputs":[{"name":"t"}],"output":{"name":"arg"}}],[11,"fmt","","",66,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",66,{"inputs":[{"name":"type"}],"output":null}],[11,"clone","","",66,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"void","","Returns the representation of the C `void` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"u8","","Returns the unsigned 8-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"i8","","Returns the signed 8-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"u16","","Returns the unsigned 16-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"i16","","Returns the signed 16-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"u32","","Returns the unsigned 32-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"i32","","Returns the signed 32-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"u64","","Returns the unsigned 64-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"i64","","Returns the signed 64-bit numeric type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"usize","","Returns the C equivalent of Rust `usize` (`u64`).",66,{"inputs":[],"output":{"name":"self"}}],[11,"isize","","Returns the C equivalent of Rust `isize` (`i64`).",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_schar","","Returns the C `signed char` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_uchar","","Returns the C `unsigned char` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_short","","Returns the C `short` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_ushort","","Returns the C `unsigned short` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_int","","Returns the C `int` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_uint","","Returns the C `unsigned int` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_long","","Returns the C `long` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_ulong","","Returns the C `unsigned long` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_longlong","","Returns the C `longlong` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c_ulonglong","","Returns the C `unsigned longlong` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"f32","","Returns the C `float` (32-bit floating point) type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"f64","","Returns the C `double` (64-bit floating point) type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"pointer","","Returns the C `void*` type, for passing any kind of pointer.",66,{"inputs":[],"output":{"name":"self"}}],[11,"longdouble","","Returns the C `long double` (extended-precision floating point) type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c32","","Returns the C `_Complex float` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"c64","","Returns the C `_Complex double` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"complex_longdouble","","Returns the C `_Complex long double` type.",66,{"inputs":[],"output":{"name":"self"}}],[11,"structure","","Constructs a structure type whose fields have the given types.",66,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"as_raw_ptr","","Gets a raw pointer to the underlying\n[`ffi_type`](../raw/struct._ffi_type.html).",66,null],[11,"fmt","","",67,{"inputs":[{"name":"builder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"new","","Constructs a `Builder`.",67,{"inputs":[],"output":{"name":"self"}}],[11,"arg","","Adds a type to the argument type list.",67,{"inputs":[{"name":"builder"},{"name":"type"}],"output":{"name":"self"}}],[11,"args","","Adds several types to the argument type list.",67,{"inputs":[{"name":"builder"},{"name":"i"}],"output":{"name":"self"}}],[11,"res","","Sets the result type.",67,{"inputs":[{"name":"builder"},{"name":"type"}],"output":{"name":"self"}}],[11,"abi","","Sets the calling convention.",67,{"inputs":[{"name":"builder"},{"name":"ffiabi"}],"output":{"name":"self"}}],[11,"into_cif","","Builds a CIF.",67,{"inputs":[{"name":"builder"}],"output":{"name":"cif"}}],[11,"into_closure","","Builds an immutable closure.",67,{"inputs":[{"name":"builder"},{"name":"callback"},{"name":"u"}],"output":{"name":"closure"}}],[11,"into_closure_mut","","Builds a mutable closure.",67,{"inputs":[{"name":"builder"},{"name":"callbackmut"},{"name":"u"}],"output":{"name":"closure"}}],[11,"into_closure_once","","Builds a one-shot closure.",67,{"inputs":[{"name":"builder"},{"name":"callbackonce"},{"name":"u"}],"output":{"name":"closureonce"}}],[6,"CallbackOnce","","The type of callback invoked by a\n[`ClosureOnce`](struct.ClosureOnce.html).",null,null],[11,"fmt","","",68,{"inputs":[{"name":"arg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"arg"}],"output":{"name":"arg"}}],[11,"new","","Coerces an argument reference into the `Arg` type.",68,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",69,{"inputs":[{"name":"cif"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"cif"}],"output":{"name":"self"}}],[11,"new","","Creates a new CIF for the given argument and result types.",69,{"inputs":[{"name":"i"},{"name":"type"}],"output":{"name":"self"}}],[11,"call","","Calls a function with the given arguments.",69,null],[11,"set_abi","","Sets the CIF to use the given calling convention.",69,{"inputs":[{"name":"cif"},{"name":"ffiabi"}],"output":null}],[11,"as_raw_ptr","","Gets a raw pointer to the underlying\n[`ffi_cif`](../low/struct.ffi_cif.html).",69,null],[11,"fmt","","",70,{"inputs":[{"name":"closure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",70,{"inputs":[{"name":"closure"}],"output":null}],[11,"new","","Creates a new closure with immutable userdata.",70,{"inputs":[{"name":"cif"},{"name":"callback"},{"name":"u"}],"output":{"name":"self"}}],[11,"new_mut","","Creates a new closure with mutable userdata.",70,{"inputs":[{"name":"cif"},{"name":"callbackmut"},{"name":"u"}],"output":{"name":"self"}}],[11,"code_ptr","","Obtains the callable code pointer for a closure.",70,null],[11,"fmt","","",71,{"inputs":[{"name":"closureonce"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",71,{"inputs":[{"name":"closureonce"}],"output":null}],[11,"new","","Creates a new closure with owned userdata.",71,{"inputs":[{"name":"cif"},{"name":"callbackonce"},{"name":"u"}],"output":{"name":"self"}}],[11,"code_ptr","","Obtains the callable code pointer for a closure.",71,null],[0,"low","libffi","A low-level wrapping of libffi, this layer makes no attempts at safety,\nbut tries to provide a somewhat more idiomatic interface.",null,null],[3,"CodePtr","libffi::low","Wraps a function pointer of unknown type.",null,null],[12,"0","","",72,null],[4,"Error","","The two kinds of errors reported by libffi.",null,null],[13,"BadTypedef","","Given a bad or unsupported type representation.",73,null],[13,"BadAbi","","Given a bad or unsupported ABI.",73,null],[5,"prep_cif","","Initalizes a CIF (Call InterFace) with the given ABI and types.",null,null],[5,"prep_cif_var","","Initalizes a CIF (Call InterFace) for a varargs function.",null,null],[5,"call","","Calls a C function as specified by a CIF.",null,null],[5,"closure_alloc","","Allocates a closure.",null,null],[5,"closure_free","","Frees a closure.",null,null],[5,"prep_closure","","Initializes a closure with a callback function and userdata.",null,null],[5,"prep_closure_mut","","Initializes a mutable closure with a callback function and (mutable)\nuserdata.",null,null],[0,"types","","Re-exports the `ffi_type` objects used to describe the types of\narguments and results.",null,null],[0,"type_tag","","Type tags used in constructing and inspecting `ffi_type`s.",null,null],[17,"STRUCT","libffi::low::type_tag","Indicates a structure type.",null,null],[17,"COMPLEX","","Indicates a complex number type.",null,null],[6,"Result","libffi::low","The `Result` type specialized for libffi `Error`s.",null,null],[6,"Callback","","The type of function called by a closure.",null,null],[6,"CallbackMut","","The type of function called by a mutable closure.",null,null],[6,"RawCallback","","The callback type expected by `raw::ffi_prep_closure_loc`.",null,null],[11,"cmp","","",73,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",73,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"option"}}],[11,"eq","","",73,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"hash","","",73,null],[11,"fmt","","",73,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"hash","","",72,null],[11,"fmt","","",72,{"inputs":[{"name":"codeptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"codeptr"}],"output":{"name":"codeptr"}}],[11,"from_fun","","Initializes a code pointer from a function pointer.",72,null],[11,"from_ptr","","Initializes a code pointer from a void pointer.",72,null],[11,"as_fun","","Gets the code pointer typed as a C function pointer.",72,null],[11,"as_safe_fun","","Gets the code pointer typed as a “safe” C function pointer.",72,null],[11,"as_ptr","","Gets the code pointer typed as a `const void*`.",72,null],[11,"as_mut_ptr","","Gets the code pointer typed as a `void*`.",72,null],[14,"ffi_call!","libffi","Performs a dynamic call to a C function.",null,null]],"paths":[[3,"_ffi_type"],[3,"ffi_cif"],[3,"ffi_raw"],[3,"ffi_closure"],[3,"ffi_raw_closure"],[3,"ffi_java_raw_closure"],[4,"ffi_abi"],[4,"ffi_status"],[4,"ffi_type_enum"],[8,"CType"],[3,"Type"],[6,"c_c32"],[6,"c_c64"],[3,"Arg"],[3,"Cif0"],[3,"Closure0"],[3,"ClosureMut0"],[3,"ClosureOnce0"],[3,"Cif1"],[3,"Closure1"],[3,"ClosureMut1"],[3,"ClosureOnce1"],[3,"Cif2"],[3,"Closure2"],[3,"ClosureMut2"],[3,"ClosureOnce2"],[3,"Cif3"],[3,"Closure3"],[3,"ClosureMut3"],[3,"ClosureOnce3"],[3,"Cif4"],[3,"Closure4"],[3,"ClosureMut4"],[3,"ClosureOnce4"],[3,"Cif5"],[3,"Closure5"],[3,"ClosureMut5"],[3,"ClosureOnce5"],[3,"Cif6"],[3,"Closure6"],[3,"ClosureMut6"],[3,"ClosureOnce6"],[3,"Cif7"],[3,"Closure7"],[3,"ClosureMut7"],[3,"ClosureOnce7"],[3,"Cif8"],[3,"Closure8"],[3,"ClosureMut8"],[3,"ClosureOnce8"],[3,"Cif9"],[3,"Closure9"],[3,"ClosureMut9"],[3,"ClosureOnce9"],[3,"Cif10"],[3,"Closure10"],[3,"ClosureMut10"],[3,"ClosureOnce10"],[3,"Cif11"],[3,"Closure11"],[3,"ClosureMut11"],[3,"ClosureOnce11"],[3,"Cif12"],[3,"Closure12"],[3,"ClosureMut12"],[3,"ClosureOnce12"],[3,"Type"],[3,"Builder"],[3,"Arg"],[3,"Cif"],[3,"Closure"],[3,"ClosureOnce"],[3,"CodePtr"],[4,"Error"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",13,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",14,null],[12,"sin6_family","","",14,null],[12,"sin6_port","","",14,null],[12,"sin6_flowinfo","","",14,null],[12,"sin6_addr","","",14,null],[12,"sin6_scope_id","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",15,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"passwd","","",null,null],[12,"pw_name","","",16,null],[12,"pw_passwd","","",16,null],[12,"pw_uid","","",16,null],[12,"pw_gid","","",16,null],[12,"pw_change","","",16,null],[12,"pw_class","","",16,null],[12,"pw_gecos","","",16,null],[12,"pw_dir","","",16,null],[12,"pw_shell","","",16,null],[12,"pw_expire","","",16,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",17,null],[12,"ifa_name","","",17,null],[12,"ifa_flags","","",17,null],[12,"ifa_addr","","",17,null],[12,"ifa_netmask","","",17,null],[12,"ifa_dstaddr","","",17,null],[12,"ifa_data","","",17,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",18,null],[12,"tm_min","","",18,null],[12,"tm_hour","","",18,null],[12,"tm_mday","","",18,null],[12,"tm_mon","","",18,null],[12,"tm_year","","",18,null],[12,"tm_wday","","",18,null],[12,"tm_yday","","",18,null],[12,"tm_isdst","","",18,null],[12,"tm_gmtoff","","",18,null],[12,"tm_zone","","",18,null],[3,"utsname","","",null,null],[12,"sysname","","",19,null],[12,"nodename","","",19,null],[12,"release","","",19,null],[12,"version","","",19,null],[12,"machine","","",19,null],[3,"msghdr","","",null,null],[12,"msg_name","","",20,null],[12,"msg_namelen","","",20,null],[12,"msg_iov","","",20,null],[12,"msg_iovlen","","",20,null],[12,"msg_control","","",20,null],[12,"msg_controllen","","",20,null],[12,"msg_flags","","",20,null],[3,"fsid_t","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",21,null],[12,"gl_offs","","",21,null],[12,"gl_pathv","","",21,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",22,null],[12,"ss_family","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_next","","",23,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",24,null],[12,"denom","","",24,null],[3,"stat","","",null,null],[12,"st_dev","","",25,null],[12,"st_mode","","",25,null],[12,"st_nlink","","",25,null],[12,"st_ino","","",25,null],[12,"st_uid","","",25,null],[12,"st_gid","","",25,null],[12,"st_rdev","","",25,null],[12,"st_atime","","",25,null],[12,"st_atime_nsec","","",25,null],[12,"st_mtime","","",25,null],[12,"st_mtime_nsec","","",25,null],[12,"st_ctime","","",25,null],[12,"st_ctime_nsec","","",25,null],[12,"st_birthtime","","",25,null],[12,"st_birthtime_nsec","","",25,null],[12,"st_size","","",25,null],[12,"st_blocks","","",25,null],[12,"st_blksize","","",25,null],[12,"st_flags","","",25,null],[12,"st_gen","","",25,null],[12,"st_lspare","","",25,null],[12,"st_qspare","","",25,null],[3,"dirent","","",null,null],[12,"d_ino","","",26,null],[12,"d_seekoff","","",26,null],[12,"d_reclen","","",26,null],[12,"d_namlen","","",26,null],[12,"d_type","","",26,null],[12,"d_name","","",26,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",27,null],[12,"si_errno","","",27,null],[12,"si_code","","",27,null],[12,"si_pid","","",27,null],[12,"si_uid","","",27,null],[12,"si_status","","",27,null],[12,"si_addr","","",27,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",28,null],[12,"sa_mask","","",28,null],[12,"sa_flags","","",28,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",29,null],[12,"ss_size","","",29,null],[12,"ss_flags","","",29,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",30,null],[12,"fst_posmode","","",30,null],[12,"fst_offset","","",30,null],[12,"fst_length","","",30,null],[12,"fst_bytesalloc","","",30,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",31,null],[12,"ra_count","","",31,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",32,null],[12,"f_frsize","","",32,null],[12,"f_blocks","","",32,null],[12,"f_bfree","","",32,null],[12,"f_bavail","","",32,null],[12,"f_files","","",32,null],[12,"f_ffree","","",32,null],[12,"f_favail","","",32,null],[12,"f_fsid","","",32,null],[12,"f_flag","","",32,null],[12,"f_namemax","","",32,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",33,null],[12,"dli_fbase","","",33,null],[12,"dli_sname","","",33,null],[12,"dli_saddr","","",33,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",34,null],[12,"sin_family","","",34,null],[12,"sin_port","","",34,null],[12,"sin_addr","","",34,null],[12,"sin_zero","","",34,null],[3,"statfs","","",null,null],[12,"f_bsize","","",35,null],[12,"f_iosize","","",35,null],[12,"f_blocks","","",35,null],[12,"f_bfree","","",35,null],[12,"f_bavail","","",35,null],[12,"f_files","","",35,null],[12,"f_ffree","","",35,null],[12,"f_fsid","","",35,null],[12,"f_owner","","",35,null],[12,"f_type","","",35,null],[12,"f_flags","","",35,null],[12,"f_fssubtype","","",35,null],[12,"f_fstypename","","",35,null],[12,"f_mntonname","","",35,null],[12,"f_mntfromname","","",35,null],[12,"f_reserved","","",35,null],[3,"kevent","","",null,null],[12,"ident","","",36,null],[12,"filter","","",36,null],[12,"flags","","",36,null],[12,"fflags","","",36,null],[12,"data","","",36,null],[12,"udata","","",36,null],[3,"kevent64_s","","",null,null],[12,"ident","","",37,null],[12,"filter","","",37,null],[12,"flags","","",37,null],[12,"fflags","","",37,null],[12,"data","","",37,null],[12,"udata","","",37,null],[12,"ext","","",37,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",38,null],[12,"dqb_bsoftlimit","","",38,null],[12,"dqb_curbytes","","",38,null],[12,"dqb_ihardlimit","","",38,null],[12,"dqb_isoftlimit","","",38,null],[12,"dqb_curinodes","","",38,null],[12,"dqb_btime","","",38,null],[12,"dqb_itime","","",38,null],[12,"dqb_id","","",38,null],[12,"dqb_spare","","",38,null],[3,"termios","","",null,null],[12,"c_iflag","","",39,null],[12,"c_oflag","","",39,null],[12,"c_cflag","","",39,null],[12,"c_lflag","","",39,null],[12,"c_cc","","",39,null],[12,"c_ispeed","","",39,null],[12,"c_ospeed","","",39,null],[3,"flock","","",null,null],[12,"l_start","","",40,null],[12,"l_len","","",40,null],[12,"l_pid","","",40,null],[12,"l_type","","",40,null],[12,"l_whence","","",40,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",41,null],[12,"hdr_cnt","","",41,null],[12,"trailers","","",41,null],[12,"trl_cnt","","",41,null],[3,"lconv","","",null,null],[12,"decimal_point","","",42,null],[12,"thousands_sep","","",42,null],[12,"grouping","","",42,null],[12,"int_curr_symbol","","",42,null],[12,"currency_symbol","","",42,null],[12,"mon_decimal_point","","",42,null],[12,"mon_thousands_sep","","",42,null],[12,"mon_grouping","","",42,null],[12,"positive_sign","","",42,null],[12,"negative_sign","","",42,null],[12,"int_frac_digits","","",42,null],[12,"frac_digits","","",42,null],[12,"p_cs_precedes","","",42,null],[12,"p_sep_by_space","","",42,null],[12,"n_cs_precedes","","",42,null],[12,"n_sep_by_space","","",42,null],[12,"p_sign_posn","","",42,null],[12,"n_sign_posn","","",42,null],[12,"int_p_cs_precedes","","",42,null],[12,"int_n_cs_precedes","","",42,null],[12,"int_p_sep_by_space","","",42,null],[12,"int_n_sep_by_space","","",42,null],[12,"int_p_sign_posn","","",42,null],[12,"int_n_sign_posn","","",42,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"_WSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwuid_r","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",43,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",43,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",43,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",43,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",43,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",43,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",43,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",43,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",43,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",43,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",43,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",43,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",43,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",43,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",43,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",43,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",43,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",43,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",43,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",43,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",43,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",43,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",43,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"fmt","","",43,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",44,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",44,null],[11,"clone","libc","",45,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",21,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",22,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",23,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",24,{"inputs":[{"name":"mach_timebase_info"}],"output":{"name":"mach_timebase_info"}}],[11,"clone","","",25,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",26,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",46,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",47,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",48,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",49,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",27,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",28,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",29,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",30,{"inputs":[{"name":"fstore_t"}],"output":{"name":"fstore_t"}}],[11,"clone","","",31,{"inputs":[{"name":"radvisory"}],"output":{"name":"radvisory"}}],[11,"clone","","",32,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",33,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",34,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",35,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",36,{"inputs":[{"name":"kevent"}],"output":{"name":"kevent"}}],[11,"clone","","",37,{"inputs":[{"name":"kevent64_s"}],"output":{"name":"kevent64_s"}}],[11,"clone","","",38,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",39,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",40,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",41,{"inputs":[{"name":"sf_hdtr"}],"output":{"name":"sf_hdtr"}}],[11,"clone","","",42,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",17,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",50,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",18,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",19,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",20,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",51,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",12,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"CTL_HW","","",null,null],[17,"HW_NCPU","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NCCS","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"WNOHANG","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_SYSCOUNT","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[4,"Option"],[8,"Clone"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_rwlock_t"],[3,"fd_set"],[3,"fsid_t"]]};
initSearch(searchIndex);
